/*
 * Tarea 02
 * Sistema Academico con conexion a Base de Datos
 * 
 * Estudiante: Daniel Somarribas Quir�s
 * Carnet: b57072
 * Mayo, 2016
 */
package Vista.Frame.Ver;

import Controlador.CNTRL_MenuPrincipal;
import Modelo.Database.ConexionBD;
import Modelo.Metodos.MTDS_Matriculas;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DanielSQ
 */
public class FRM_VerMatriculas extends javax.swing.JFrame {
    ConexionBD baseDatos;
    DefaultTableModel model;
    String tipo;
    MTDS_Matriculas metodos;
    CNTRL_MenuPrincipal controladorMenu;
    
    /**
     * Creates new form FRM_Matricula
     * @param baseDatos
     * @param controladorMenu
     */
    public FRM_VerMatriculas(ConexionBD baseDatos, CNTRL_MenuPrincipal controladorMenu) 
    {
        model = new DefaultTableModel();
        this.controladorMenu = controladorMenu;
        this.baseDatos = baseDatos;
        initComponents();
        resetTabla();
    }
    
    /**
     * Define el modelo de la tabla
     */
    public void defineModel()
    {
        model.addColumn("Código de Estudiante");
        model.addColumn("Nombre de Estudiante");
        model.addColumn("Código de Curso");
        model.addColumn("Nombre de Curso");
        model.addColumn("Créditos");
    }

    /**
     * Reinicia la Tabla
     * Determina que las celdas no sean editables
     */
    public void resetTabla()
    {
        model = null;
        model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        defineModel();
        jtbl_Matriculas.setModel(model);
    }
    
    /**
     * Llena la tabla con la información de la base de Datos
     */
    public void updateTabla()
    {        
        int numeroFilas = 0;
                
        String[][] infoTotalMatriculas = null;
        String[][] infoCursos = null;
        String[] infoEstudiantes = null;
        
        if(tipo.equals("Base"))
        {
            numeroFilas = baseDatos.numeroFilasMatricula();
            
            System.out.println("Número de Filas: "+numeroFilas);
            
            infoTotalMatriculas = baseDatos.InfoTotalMatriculas(numeroFilas);
            infoCursos = baseDatos.InfoCursosMatriculas(numeroFilas, infoTotalMatriculas);
            infoEstudiantes = baseDatos.InfoEstudiantesMatriculas(numeroFilas, infoTotalMatriculas);
        }
        
        if(tipo.equals("Texto") || tipo.equals("XML"))
        {
            numeroFilas = metodos.getArraySize();
            infoTotalMatriculas = metodos.getTodos();
            
            infoEstudiantes = new String[numeroFilas];
            infoCursos = new String[numeroFilas][2];
            
            for(int i=0;i<numeroFilas;i++)
            {
                System.out.println("Buscando ID del estudiante: "+infoTotalMatriculas[i][0]);
                
                if(controladorMenu != null)
                {
                    System.out.println("Existe controlador Menu!");
                }
                else
                {
                    System.out.println("No se encuentra el controlador menú :/");
                }
                
                infoEstudiantes[i] = controladorMenu.getNombreEstudiante(infoTotalMatriculas[i][0]);
                infoCursos[i] = controladorMenu.getInfoCurso(infoTotalMatriculas[i][1]);
            }
        }
        
        for(int i=0;i<numeroFilas;i++)
        {
            String infoFila[] = new String[5];
                    
            System.out.println("Agregando Fila: "+i);
            
            infoFila[0] = infoTotalMatriculas[i][0];
            infoFila[1] = infoEstudiantes[i];
            infoFila[2] = infoTotalMatriculas[i][1];           
            infoFila[3] = infoCursos[i][0];
            infoFila[4] = infoCursos[i][1];    
            
            model.addRow(infoFila);
            
            System.out.println("Fila Añadida:\n"+
                    "Código de Estudiante: "+infoFila[0]+" "+
                    "Nombre de Estudiante: "+infoFila[1]+" "+
                    "Código de Curso: "+infoFila[2]+" "+
                    "Nombre de Curso: "+infoFila[3]+" "+
                    "Créditos: "+infoFila[4]);
            
            infoFila = new String[5];
        }
    }
    
    public void setTipo(String tipo)
    {
        this.tipo = tipo;
    }
    
    public void setMetodos(MTDS_Matriculas metodos)
    {
        this.metodos = metodos;
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_Matriculas = new javax.swing.JTable();
        jbtn_Salir = new javax.swing.JButton();

        setTitle("Ver Matrículas");
        setResizable(false);

        jtbl_Matriculas.setModel(model);
        jScrollPane1.setViewportView(jtbl_Matriculas);

        jbtn_Salir.setText("Salir");
        jbtn_Salir.setToolTipText("Salir");
        jbtn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtn_Salir)
                .addGap(388, 388, 388))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jbtn_Salir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_SalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jbtn_SalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtn_Salir;
    private javax.swing.JTable jtbl_Matriculas;
    // End of variables declaration//GEN-END:variables
}
