/*
 * Tarea 02
 * Sistema Academico con conexion a Base de Datos
 * 
 * Curso: Daniel Somarribas Quir�s
 * Carnet: b57072
 * Mayo, 2016
 */
package Vista.Frame.Administrar;

import Controlador.CNTRL_Cursos;
import Modelo.Database.ConexionBD;
import Modelo.Metodos.MTDS_Cursos;

/**
 *
 * @author DanielSQ
 */
public class FRM_Cursos extends javax.swing.JFrame {
    public boolean agregarOpen = false;
    CNTRL_Cursos controlador;
    String tipo = "";
    
    /**
     * Creates new form FRM_Cursos
     */
    public FRM_Cursos(ConexionBD baseDatos) 
    {
        controlador = new CNTRL_Cursos(this, baseDatos);
        initComponents();
        addController(controlador);
        nadaConf();
    }
    
    /**
     * Añade el controlador a los botones del frame
     * @param controlador
     */
    public void addController(CNTRL_Cursos controlador)
    {
       jp_InfoCurso.addController(controlador, this);
       jp_Botones.addController(controlador);
    }
    
    /**
     * Devuelve el Código escrito en el frame
     * @return
     */
    public String getID()
    {
        return jp_InfoCurso.getCursoID();
    }
    
    /**
     * Devuelve la información completa escrita en el frame
     * @return
     */
    public String[] getInfo()
    {
        return jp_InfoCurso.getInfo();
    }
    
    /**
     * Llena los campos con la información obtenida en la base de datos
     * @param info
     */
    public void fillFields(String[] info)
    {
        jp_InfoCurso.fillFields(info);
    }
        
    /**
     * Limpia todos los campos
     */
    public void clearFields()
    {
        jp_InfoCurso.clearFields();
    }
    
    /**
     * Limpia los campos de Nombre y Dirección
     */
    public void clearPartialFields()
    {
        jp_InfoCurso.clearPartialFields();
    }
    
    /**
     * Define la configuración para cuando no hay ningún botón disponible
     */
    public void nadaConf()
    {
        
        jp_Botones.nadaConf();
        agregarOpen = false;
    }

    /**
     * Configura los botones para cuando no hay ningún estudiante encontrado
     */
    public void noEntidadConf()
    {
        jp_Botones.noEntidadConf();
        agregarOpen = true;
    }
    
    /**
     * Configura los botones para cuando se ha encontrado un estudiante
     */
    public void siEntidadConf()
    {
        jp_Botones.siEntidadConf();
        agregarOpen = false;
    }
    
    public void setTipo(String tipo)
    {
        this.tipo = tipo;
        controlador.setTipo(tipo);
    }
    
    public String[] getInfoBuscar(String codigo)
    {
        return controlador.getInfoBuscar(codigo);
    }
    
    public MTDS_Cursos getMetodos()
    {
        return controlador.getMetodos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_Botones = new Vista.Panel.Botones.JP_Botones();
        jp_InfoCurso = new Vista.Panel.Info.JP_InfoCurso();

        setTitle("Administrar Cursos");
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_Botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jp_InfoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_InfoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jp_Botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Vista.Panel.Botones.JP_Botones jp_Botones;
    private Vista.Panel.Info.JP_InfoCurso jp_InfoCurso;
    // End of variables declaration//GEN-END:variables
}
