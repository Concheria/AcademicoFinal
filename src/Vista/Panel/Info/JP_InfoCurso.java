/*
 * Tarea 02
 * Sistema Acad�mico con conexi�n a Base de Datos
 * 
 * Curso: Daniel Somarribas Quir�s
 * Carnet: b57072
 * Mayo, 2016
 */
package Vista.Panel.Info;

import Controlador.CNTRL_Cursos;
import Controlador.CNTRL_Matriculas;
import Vista.Frame.Administrar.FRM_Cursos;
import Vista.Frame.Administrar.FRM_Matriculas;

/**
 *
 * @author DanielSQ
 */
public class JP_InfoCurso extends javax.swing.JPanel {
    CNTRL_Cursos controlador = null;
    CNTRL_Matriculas controladorMatriculas = null;
    FRM_Cursos frame = null;
    FRM_Matriculas matriculas = null;

    /**
     * Creates new form JP_InfoCurso
     */
    public JP_InfoCurso() {
        initComponents();
    }
    
    /**
     * Añade el controlador al campo de código
     * @param controlador
     * @param frame
     */
    public void addController(CNTRL_Cursos controlador, FRM_Cursos frame)
    {
        this.controlador = controlador;
        this.frame = frame;
        jtf_CursoID.setActionCommand("Buscar");
        jtf_CursoID.addActionListener(controlador);
    }
    
    /**
     * Añade el controlador al campo de código (Matrículas)
     * @param controladorMatriculas
     * @param matriculas
     */
    public void addController(CNTRL_Matriculas controladorMatriculas, FRM_Matriculas matriculas)
    {
        this.controladorMatriculas = controladorMatriculas;
        this.matriculas = matriculas;
        jtf_CursoID.setActionCommand("Buscar");
        jtf_CursoID.addActionListener(controladorMatriculas);
    }
    
    /**
     * Devuelve el ID del Curso escrito en el frame
     * @return
     */
    public String getCursoID()
    {
        return jtf_CursoID.getText();
    }
    
    /**
     * Devuelve toda la información del curso escrita en el frame
     * @return
     */
    public String[] getInfo()
    {
        String[] info = new String[3];
        
        info[0] = jtf_CursoID.getText();
        info[1] = jtf_Nombre.getText();
        info[2] = jtf_Creditos.getText();
        
        return info;
    }
    
    /**
     * Llena los campos de texto con la información del Curso
     * @param info
     */
    public void fillFields(String[] info)
    {
        jtf_Nombre.setText(info[0]);
        jtf_Creditos.setText(info[1]);
    }
    
    /**
     * Limpia los campos de texto
     */
    public void clearFields()
    {
        jtf_CursoID.setText("");
        jtf_Nombre.setText("");
        jtf_Creditos.setText("");
    }
    
    /**
     * Limpia únicamente los campos de texto para nombre y créditos
     */
    public void clearPartialFields()
    {
        jtf_Nombre.setText("");
        jtf_Creditos.setText("");
    }
    
    /**
     * Establece los espacios de Nombre y Créditos como No Editables
     */
    public void setNoEditable()
    {
        jtf_Nombre.setEditable(false);
        jtf_Creditos.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jl_EstudianteID = new javax.swing.JLabel();
        jl_Nombre = new javax.swing.JLabel();
        jl_Creditos = new javax.swing.JLabel();
        jtf_Creditos = new javax.swing.JTextField();
        jtf_Nombre = new javax.swing.JTextField();
        jtf_CursoID = new javax.swing.JTextField();

        jl_EstudianteID.setText("Código");

        jl_Nombre.setText("Nombre");

        jl_Creditos.setText("Créditos");

        jtf_Creditos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_CreditosKeyPressed(evt);
            }
        });

        jtf_Nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_CreditosKeyPressed(evt);
            }
        });

        jtf_CursoID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_CreditosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_CursoIDKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl_EstudianteID)
                    .addComponent(jl_Nombre)
                    .addComponent(jl_Creditos))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jtf_Creditos)
                    .addComponent(jtf_CursoID))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_CursoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_EstudianteID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_Nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_Creditos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_Creditos)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_CursoIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_CursoIDKeyReleased
        if(jtf_CursoID.getText().equals(""))
        {
            if(frame != null)
            {
                frame.nadaConf();
            }
        }
        else
        {
            if(controlador != null)
            {
                controlador.buscar();
            }
            if(controladorMatriculas != null)
            {
                controladorMatriculas.buscarCurso();
            }
        }
    }//GEN-LAST:event_jtf_CursoIDKeyReleased
    
    private void jtf_CreditosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_CreditosKeyPressed
        if(evt.getKeyCode()==10)
        {
            if(frame != null)
            {
                if(frame.agregarOpen == true)
                {
                    if(controlador != null)
                    {
                        controlador.agregar();
                    }
                }
            }
        }
    }//GEN-LAST:event_jtf_CreditosKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jl_Creditos;
    private javax.swing.JLabel jl_EstudianteID;
    private javax.swing.JLabel jl_Nombre;
    private javax.swing.JTextField jtf_Creditos;
    private javax.swing.JTextField jtf_CursoID;
    private javax.swing.JTextField jtf_Nombre;
    // End of variables declaration//GEN-END:variables
}
